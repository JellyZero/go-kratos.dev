"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1794],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return m}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},s=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=l(t),m=i,g=s["".concat(u,".").concat(m)]||s[m]||d[m]||o;return t?n.createElement(g,a(a({ref:r},p),{},{components:t})):n.createElement(g,a({ref:r},p))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=s;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},43:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var n=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],c={id:"circuitbreaker",title:"Circuit Breaker",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},u=void 0,l={unversionedId:"component/middleware/circuitbreaker",id:"component/middleware/circuitbreaker",title:"Circuit Breaker",description:"Circuit breaker middleware for providing client-side breaker functionality, with sre breaker algorithm implemented by default\u3002",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/03-circuitbreaker.md",sourceDirName:"component/middleware",slug:"/component/middleware/circuitbreaker",permalink:"/en/docs/component/middleware/circuitbreaker",editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/03-circuitbreaker.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"circuitbreaker",title:"Circuit Breaker",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},sidebar:"docs",previous:{title:"Authentication",permalink:"/en/docs/component/middleware/auth"},next:{title:"Logging",permalink:"/en/docs/component/middleware/logging"}},p={},d=[{value:"Configuration",id:"configuration",level:3},{value:"<code>WithGroup</code>",id:"withgroup",level:4},{value:"Usage",id:"usage",level:3},{value:"Use circuit breaker in client",id:"use-circuit-breaker-in-client",level:4},{value:"Trigger circuit breaker",id:"trigger-circuit-breaker",level:4}],s={toc:d};function m(e){var r=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Circuit breaker middleware for providing client-side breaker functionality, with ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/go-kratos/aegis/tree/main/circuitbreaker/sre"},"sre breaker")," algorithm implemented by default\u3002"),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("h4",{id:"withgroup"},(0,o.kt)("inlineCode",{parentName:"h4"},"WithGroup")),(0,o.kt)("p",null,"breaker depends on ",(0,o.kt)("inlineCode",{parentName:"p"},"container/group")," to implement the use of mutually independent breaker for different ",(0,o.kt)("inlineCode",{parentName:"p"},"Operation"),".\nuse ",(0,o.kt)("inlineCode",{parentName:"p"},"WithGroup")," to configure a costom Breaker to replace the default breaker algorithm\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// WithGroup with circuit breaker group.\n// NOTE: implements generics circuitbreaker.CircuitBreaker\nfunc WithGroup(g *group.Group) Option {\n    return func(o *options) {\n        o.group = g\n    }\n}\n")),(0,o.kt)("p",null,"The default configuration generates separate breakers for different ",(0,o.kt)("inlineCode",{parentName:"p"},"Operation"),"(s)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"opt := &options{\n    group: group.NewGroup(func() interface{} {\n        return sre.NewBreaker()\n    }),\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"group.Group")," is a ",(0,o.kt)("inlineCode",{parentName:"p"},"lazy load container")," . The instance of ",(0,o.kt)("strong",{parentName:"p"},"group.Group")," should be implement the ",(0,o.kt)("strong",{parentName:"p"},"CircuitBreaker")," interface in ",(0,o.kt)("inlineCode",{parentName:"p"},"aegis/circuitbreaker")," "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// CircuitBreaker is a circuit breaker.\ntype CircuitBreaker interface {\n    Allow() error // it means rejected when return error\n  MarkSuccess() \n    MarkFailed() \n}\n")),(0,o.kt)("h3",{id:""}),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("h4",{id:"use-circuit-breaker-in-client"},"Use circuit breaker in client"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// http\nconn, err := http.NewClient(\n    context.Background(),\n    http.WithMiddleware(\n        circuitbreaker.Client(),\n    ),\n    http.WithEndpoint("127.0.0.1:8000"),\n)\n// grpc \nconn,err := transgrpc.Dial(\n  context.Background(), \n    grpc.WithMiddleware(\n        circuitbreaker.Client(),\n    ),\n  grpc.WithEndpoint("127.0.0.1:9000"),\n)\n')),(0,o.kt)("h4",{id:"trigger-circuit-breaker"},"Trigger circuit breaker"),(0,o.kt)("p",null,"When the breaker is triggered, the client call for this ",(0,o.kt)("inlineCode",{parentName:"p"},"Operation")," fails quickly for a period of time and returns the error ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrNotAllowed")," immediately\uff0cwhich defined as follows\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// ErrNotAllowed is request failed due to circuit breaker triggered.\nvar ErrNotAllowed = errors.New(503, "CIRCUITBREAKER", "request failed due to circuit breaker triggered")\n')))}m.isMDXComponent=!0}}]);